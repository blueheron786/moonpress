@using MoonPress.Core.Models
@inject NavigationManager Navigation

<EditForm Model="@Model" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Title</label>
        <InputText class="form-control" @bind-Value="Model.Title" />
    </div>

    <div class="mb-3">
        <label for="slug">Slug (URL-friendly identifier)</label>
        <InputText id="slug"
                   class="form-control"
                   @bind-Value="Model.Slug"
                   placeholder="Leave blank to auto-generate from title" />
        <div class="form-text">
            Used in URLs. Leave blank to auto-generate from title.
        </div>
        <ValidationMessage For="@(() => Model.Slug)" />
    </div>

    <div class="mb-3">
        <label for="datePublished">Date Published</label>
        <InputDate id="datePublished"
                   class="form-control"
                   @bind-Value="Model.DatePublished" />
        <ValidationMessage For="@(() => Model.DatePublished)" />
    </div>

    <div class="mb-3">
        <label>Contents</label>
        <InputTextArea class="form-control" @bind-Value="Model.Contents" rows="10" />
    </div>

    <div class="mb-3">
        <label for="category">Category</label>
        <InputText id="categorys"
                   class="form-control"
                   @bind-Value="Model.Category" />
        <div class="form-text">
        </div>
        <ValidationMessage For="@(() => Model.Category)" />
    </div>

    <div class="mb-3">
        <label for="tags">Tags (comma separated)</label>
        <InputText id="tags"
                   class="form-control"
                   @bind-Value="Model.Tags" />
        <div class="form-text">
            Separate multiple tags with commas.
        </div>
        <ValidationMessage For="@(() => Model.Tags)" />
    </div>

    <div class="mb-3">
        <label for="summary">Summary (for og:description tag)</label>
        <InputTextArea id="summary"
                       class="form-control"
                       @bind-Value="Model.Summary"
                       @oninput="OnSummaryChanged" />
        <div class="form-text">
            @SummaryLength / 140
        </div>
        <ValidationMessage For="@(() => Model.Summary)" />
    </div>

    <div class="mb-3">
        <label>Custom Fields</label>
        @foreach (var pair in CustomFieldsList)
        {
            <div class="input-group mb-2">
                <input class="form-control" placeholder="Key"
                       @bind="pair.Key" @bind:event="oninput" />
                <input class="form-control" placeholder="Value"
                       @bind="pair.Value" @bind:event="oninput" />
                <button type="button" class="btn btn-danger"
                        @onclick="() => RemoveCustomField(pair)">Remove</button>
            </div>
        }
        <button type="button" class="btn btn-secondary" @onclick="AddCustomField">Add Custom Field</button>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
</EditForm>